// Code generated by protoc-gen-go.
// source: dlock.proto
// DO NOT EDIT!

/*
Package dlock is a generated protocol buffer package.

It is generated from these files:
	dlock.proto

It has these top-level messages:
	Request
	Response
	RequestLock
*/
package dlock

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RequestType int32

const (
	RequestType_Invalid RequestType = 0
	RequestType_Ping    RequestType = 1
	RequestType_Lock    RequestType = 2
)

var RequestType_name = map[int32]string{
	0: "Invalid",
	1: "Ping",
	2: "Lock",
}
var RequestType_value = map[string]int32{
	"Invalid": 0,
	"Ping":    1,
	"Lock":    2,
}

func (x RequestType) String() string {
	return proto.EnumName(RequestType_name, int32(x))
}
func (RequestType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ResponseStatus int32

const (
	// Error codes:
	// 1-99: protocol level errors
	// 100-119: [lock] input validation errors
	// 120-139: [lock] response errors for valid input
	ResponseStatus_Ok          ResponseStatus = 0
	ResponseStatus_General     ResponseStatus = 1
	ResponseStatus_Version     ResponseStatus = 2
	ResponseStatus_InvalidType ResponseStatus = 3
	// Lock 100-199
	ResponseStatus_TooManyKeys    ResponseStatus = 100
	ResponseStatus_AcquireTimeout ResponseStatus = 120
)

var ResponseStatus_name = map[int32]string{
	0:   "Ok",
	1:   "General",
	2:   "Version",
	3:   "InvalidType",
	100: "TooManyKeys",
	120: "AcquireTimeout",
}
var ResponseStatus_value = map[string]int32{
	"Ok":             0,
	"General":        1,
	"Version":        2,
	"InvalidType":    3,
	"TooManyKeys":    100,
	"AcquireTimeout": 120,
}

func (x ResponseStatus) String() string {
	return proto.EnumName(ResponseStatus_name, int32(x))
}
func (ResponseStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Request struct {
	Version     uint32      `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Id          uint64      `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	AccessToken string      `protobuf:"bytes,3,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	Type        RequestType `protobuf:"varint,4,opt,name=type,enum=dlock.RequestType" json:"type,omitempty"`
	// Ping is empty
	Lock *RequestLock `protobuf:"bytes,51,opt,name=lock" json:"lock,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Request) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Request) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *Request) GetType() RequestType {
	if m != nil {
		return m.Type
	}
	return RequestType_Invalid
}

func (m *Request) GetLock() *RequestLock {
	if m != nil {
		return m.Lock
	}
	return nil
}

type Response struct {
	Version        uint32         `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	RequestId      uint64         `protobuf:"varint,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Status         ResponseStatus `protobuf:"varint,3,opt,name=status,enum=dlock.ResponseStatus" json:"status,omitempty"`
	ErrorText      string         `protobuf:"bytes,4,opt,name=error_text,json=errorText" json:"error_text,omitempty"`
	Keys           []string       `protobuf:"bytes,5,rep,name=keys" json:"keys,omitempty"`
	ServerUnixTime int64          `protobuf:"varint,6,opt,name=server_unix_time,json=serverUnixTime" json:"server_unix_time,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Response) GetRequestId() uint64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *Response) GetStatus() ResponseStatus {
	if m != nil {
		return m.Status
	}
	return ResponseStatus_Ok
}

func (m *Response) GetErrorText() string {
	if m != nil {
		return m.ErrorText
	}
	return ""
}

func (m *Response) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Response) GetServerUnixTime() int64 {
	if m != nil {
		return m.ServerUnixTime
	}
	return 0
}

type RequestLock struct {
	WaitMicro    uint64   `protobuf:"varint,1,opt,name=wait_micro,json=waitMicro" json:"wait_micro,omitempty"`
	ReleaseMicro uint64   `protobuf:"varint,2,opt,name=release_micro,json=releaseMicro" json:"release_micro,omitempty"`
	Keys         []string `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
}

func (m *RequestLock) Reset()                    { *m = RequestLock{} }
func (m *RequestLock) String() string            { return proto.CompactTextString(m) }
func (*RequestLock) ProtoMessage()               {}
func (*RequestLock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RequestLock) GetWaitMicro() uint64 {
	if m != nil {
		return m.WaitMicro
	}
	return 0
}

func (m *RequestLock) GetReleaseMicro() uint64 {
	if m != nil {
		return m.ReleaseMicro
	}
	return 0
}

func (m *RequestLock) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "dlock.Request")
	proto.RegisterType((*Response)(nil), "dlock.Response")
	proto.RegisterType((*RequestLock)(nil), "dlock.RequestLock")
	proto.RegisterEnum("dlock.RequestType", RequestType_name, RequestType_value)
	proto.RegisterEnum("dlock.ResponseStatus", ResponseStatus_name, ResponseStatus_value)
}

func init() { proto.RegisterFile("dlock.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x52, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0xad, 0x93, 0x74, 0xb7, 0x99, 0xb4, 0xc1, 0x1a, 0x09, 0x29, 0x17, 0xa4, 0xb0, 0x48, 0x28,
	0xaa, 0xc4, 0x1e, 0xda, 0x5f, 0xc0, 0x09, 0x55, 0x50, 0x81, 0x4c, 0xe0, 0x1a, 0x85, 0x64, 0x04,
	0x56, 0x76, 0xe3, 0xad, 0xed, 0x2c, 0xc9, 0x1f, 0xe2, 0xef, 0xf0, 0x97, 0x90, 0x9d, 0x74, 0xf9,
	0x38, 0x70, 0xf3, 0xbc, 0x79, 0x33, 0xef, 0xbd, 0x91, 0x21, 0x69, 0x77, 0xaa, 0xe9, 0xb6, 0x07,
	0xad, 0xac, 0xc2, 0x73, 0x5f, 0x6c, 0x7e, 0x30, 0x58, 0x0b, 0x7a, 0x18, 0xc8, 0x58, 0xcc, 0x60,
	0x7d, 0x24, 0x6d, 0xa4, 0xea, 0x33, 0x96, 0xb3, 0xe2, 0x4a, 0x3c, 0x96, 0x98, 0x42, 0x20, 0xdb,
	0x2c, 0xc8, 0x59, 0x11, 0x89, 0x40, 0xb6, 0xf8, 0x1c, 0x2e, 0xeb, 0xa6, 0x21, 0x63, 0x2a, 0xab,
	0x3a, 0xea, 0xb3, 0x30, 0x67, 0x45, 0x2c, 0x92, 0x19, 0x2b, 0x1d, 0x84, 0x2f, 0x21, 0xb2, 0xd3,
	0x81, 0xb2, 0x28, 0x67, 0x45, 0x7a, 0x83, 0xdb, 0x59, 0x7b, 0x91, 0x2a, 0xa7, 0x03, 0x09, 0xdf,
	0x77, 0x3c, 0xd7, 0xc9, 0x6e, 0x73, 0x56, 0x24, 0xff, 0xf2, 0xde, 0xa9, 0xa6, 0x13, 0xbe, 0xbf,
	0xf9, 0xc9, 0xe0, 0x42, 0x90, 0x39, 0xa8, 0xde, 0xd0, 0x7f, 0x9c, 0x3e, 0x03, 0xd0, 0xf3, 0x6c,
	0x75, 0x72, 0x1c, 0x2f, 0xc8, 0x5d, 0x8b, 0xaf, 0x60, 0x65, 0x6c, 0x6d, 0x07, 0xe3, 0x2d, 0xa7,
	0x37, 0x4f, 0x4f, 0x7a, 0xf3, 0xe6, 0x8f, 0xbe, 0x29, 0x16, 0x92, 0xdb, 0x46, 0x5a, 0x2b, 0x5d,
	0x59, 0x1a, 0xad, 0x8f, 0x12, 0x8b, 0xd8, 0x23, 0x25, 0x8d, 0x16, 0x11, 0xa2, 0x8e, 0x26, 0x93,
	0x9d, 0xe7, 0x61, 0x11, 0x0b, 0xff, 0xc6, 0x02, 0xb8, 0x21, 0x7d, 0x24, 0x5d, 0x0d, 0xbd, 0x1c,
	0x2b, 0x2b, 0xf7, 0x94, 0xad, 0x72, 0x56, 0x84, 0x22, 0x9d, 0xf1, 0x4f, 0xbd, 0x1c, 0x4b, 0xb9,
	0xa7, 0x0d, 0x41, 0xf2, 0x47, 0x4c, 0xa7, 0xf5, 0xbd, 0x96, 0xb6, 0xda, 0xcb, 0x46, 0x2b, 0x1f,
	0x2b, 0x12, 0xb1, 0x43, 0xee, 0x1d, 0x80, 0x2f, 0xe0, 0x4a, 0xd3, 0x8e, 0x6a, 0x43, 0x0b, 0x63,
	0xce, 0x76, 0xb9, 0x80, 0x33, 0xe9, 0xd1, 0x50, 0xf8, 0xdb, 0xd0, 0xf5, 0xf6, 0x24, 0xe3, 0xae,
	0x8e, 0x09, 0xac, 0xef, 0xfa, 0x63, 0xbd, 0x93, 0x2d, 0x3f, 0xc3, 0x0b, 0x88, 0x3e, 0xc8, 0xfe,
	0x2b, 0x67, 0xee, 0xe5, 0x5c, 0xf0, 0xe0, 0xfa, 0x1b, 0xa4, 0x7f, 0x5f, 0x03, 0x57, 0x10, 0xbc,
	0xef, 0xf8, 0x99, 0x1b, 0x7d, 0x43, 0x3d, 0xe9, 0x7a, 0xc7, 0x99, 0x2b, 0x3e, 0xcf, 0x37, 0xe7,
	0x01, 0x3e, 0x81, 0x64, 0x59, 0xea, 0x34, 0x78, 0xe8, 0x80, 0x52, 0xa9, 0xfb, 0xba, 0x9f, 0xde,
	0xd2, 0x64, 0x78, 0x8b, 0x08, 0xe9, 0xeb, 0xe6, 0x61, 0x90, 0x9a, 0x5c, 0x76, 0x35, 0x58, 0x3e,
	0x7e, 0x59, 0xf9, 0x9f, 0x78, 0xfb, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x01, 0x37, 0x2c, 0xcd, 0x98,
	0x02, 0x00, 0x00,
}
